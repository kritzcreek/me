#+TITLE:  Shell Profiles
#+AUTHOR: Ben Sima
#+EMAIL:  bensima@gmail.com
#+TAGS:   shell bash zshell

This generates my =.profile=, which can establish settings across all
shell environments. This means it will be portable across all
environments and shells that I might use. Think of it as "portable
shell scripting", like "portable Common Lisp" or "portable C." Maybe.

The differences between =~/.profile=, =~/.bash_profile=, and
=~/.bashrc= are actually kinda interesting, from a
nerdy-computing-history perspective. Read about them [[http://superuser.com/a/183980][here]]. What I took
away from that explanation is that most of my stuff will go into
=~/.profile=, but if I really get to changing my prompt and setting up
a ton of aliases, I will setup a =~/.bashrc=, and probably a
bashrc.org to go with it. For now I'll just tangle my aliases into
=~/.bashrc= from this org file.

* Path

  Only add the following directories if they exist. For portability!

  #+BEGIN_SRC sh
  OLDPATH=$PATH
  PATH=$HOME/bin

  for DIR in /usr/local/git/bin /opt/local/bin /opt/local/sbin /usr/local/bin /usr/local/sbin $HOME/me/bin
  do
    if [ -d $DIR ]
    then
      PATH=$PATH:$DIR
    fi
  done

  PATH=$PATH:$OLDPATH
  #+END_SRC

* CLI Tools and Programs
** curl

   Why isnt' curl standard? Let's install it if it's not already.

   #+BEGIN_SRC sh
   command -v curl >/dev/null 2>&1 || sudo apt-get install curl
   #+END_SRC

** Silver Searcher

   [[https://github.com/ggreer/the_silver_searcher][Silver Searcher]] is a code searching tool similar to =ack=, but
   super fast.
   
   #+BEGIN_SRC sh
   command -v ag >/dev/null 2>&1 || sudo apt-get install silversearcher-ag
   #+END_SRC

   Create collection of [[file:~/.agignore][ignorable files]] so it doesnâ€™t look in backup
   files:
    
   #+BEGIN_SRC org :tangle ~/.agignore :comments no :shebang ""
     #.* 
   #+END_SRC

** Git

   The default Git available in Debian-based systems is old. Let's use
   the latest.

   #+BEGIN_SRC sh
   sudo add-apt-repository ppa:git-core/ppa
   sudo apt-get update
   sudo apt-get install git
   #+END_SRC
   
* Emacs

  Set =EDITOR= to start up an =emacsclient=:

  #+BEGIN_SRC sh
  export EDITOR=/usr/bin/emacsclient
  #+END_SRC
  
* Ruby

  If [[http://rvm.io][RVM]] is installed, load it into the shell session /as a function/
  (this is apparently important).

  #+BEGIN_SRC sh
  load_rvm() {
    [[ -s "$HOME/.rvm/scripts/rvm" ]]
    . "$HOME/.rvm/scripts/rvm"
  }

  if [ -d "$HOME/.rvm" ]
  then
    load_rvm
  else
    gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    curl -sSL https://get.rvm.io | bash -s stable
  fi
  #+END_SRC

  A few aliases, should be self explanatory

  #+BEGIN_SRC sh :tangle ~/.bashrc
  alias be="bundle exec"
  alias s="bundle exec rspec --color"
  alias migrate="rake db:migrate db:test:clone"
  alias last_migration="ls db/migrate | tail -n1 | head -c 14"
  #+END_SRC
  
* Python

  Load [[https://github.com/yyuu/pyenv][pyenv]] if it's installed. The pyenv installer simply creates a
  =~/.pyenv= directory, so we check for that. If it's not installed,
  then install it.
  
  #+BEGIN_SRC sh
  load_pyenv() {
    export PATH="$HOME/.pyenv/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
  }

  if [ -d "$HOME/.pyenv" ]
  then
    load_pyenv
  else
    curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
    load_pyenv
  fi
  #+END_SRC

  Now I can do =pyenv update= to be sure I have the latest version.

* Global Aliases

   A quick grep shortcut. =-i= ignores case, and =-n= displays the
   line numbers.

   #+BEGIN_SRC sh :tangle ~/.bashrc
   alias g='grep -in'
   #+END_SRC

   Show my history

   #+BEGIN_SRC sh :tangle ~/.bashrc
   alias history='fc -l 1'
   #+END_SRC

   Helpful "list directory" shortcuts

   #+BEGIN_SRC sh :tangle ~/.bashrc
   alias lsa='ls -lah'
   alias l='ls -lA1'
   alias ll='ls -l'
   alias la='ls -lA'
   alias sl=ls # often screw this up
   #+END_SRC

   Working directory. =setproj= sets to the current working directory
   to the project directory variable, =cdproj= changes to the project directory

   #+BEGIN_SRC sh :tangle ~/.bashrc
   cdproj() {
     export wdir=$(cat "$HOME/.current_project_path")
     cd "$wdir" || exit
   }

   setproj() {
     pwd > "$HOME/.current_project_path"
   }
   #+END_SRC

   Give me a second chance when deleting stuff

   #+BEGIN_SRC sh :tangle ~/.bashrc
   alias rm='rm -i'

   # better than rm -rf
   trash () {
     mv "$@" "$HOME/.trash"
   }

   alias clear_trash="rm .rf ./trash/*"
   #+END_SRC

   When I wanna know my ip address...

   #+BEGIN_SRC sh :tangle ~/.bashrc
   alias myip="ifconfig | grep 'inet ' | grep -v 127.0.0.1 | cut -d\   -f2"
   #+END_SRC

   ...or check my internet connection...

   #+BEGIN_SRC sh :tangle ~/.bashrc
   internet() {
     # count 3 packets
     # timeout 3 seconds
     if (ping -c 3 -t 3 google.com > /dev/null 2>&1)
     then
       echo 'yep'
     else
       echo 'nope'
     fi
   }
   #+END_SRC
   
* Git Aliases and Helpers

  Use [[https://hub.github.com/][hub]] as a git-wrapper

  #+BEGIN_SRC sh :tangle ~/.bashrc
  command -v hub >/dev/null 2>&1 && hub_path=$(which hub) && alias git="$hub_path"
  #+END_SRC

  Self explanatory git aliases. I don't use all of them, but they are
  nice to have

  #+BEGIN_SRC sh :tangle ~/.bashrc
  alias gl='git pull --prune'
  alias glog="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
  alias gp='git push origin HEAD'
  alias gd='git diff'
  alias gc='git commit'
  alias gca='git commit -a'
  alias gco='git checkout'
  alias gb='git branch'
  alias gs='git status -sb' # upgrade your git if -sb breaks for you. it's fun.

  alias pull="git pull"
  alias ci="git commit"
  alias st="git st"
  alias fetch="git fetch"
  alias push="git push"

  # Two aliases for adding files. The first ignores delete files,
  # the second includes them.
  alias add="git add --ignore-removal"
  alias ga="git add -A"
  #+END_SRC

* Technical Artifacts

  This is an [[http://orgmode.org][org mode]] file. Tangle it with =C-c C-v t= and it will
  place all the above source code blocks into =~/.profile=.
  
#+PROPERTY: tangle ~/.profile
#+PROPERTY: comments org
#+PROPERTY: shebang #!/bin/sh
#+DESCRIPTION: Global environment varialbes for all shells
