#+TITLE: bio.comp
#+AUTHOR: Ben Sima

My notes on biology, both computational and synthetic, which I
perceive to be eventually convergent, anyhow.

* In search of a Turing-complete Chemistry

If synthetic or computational biology is to ever truly be useful, it
must have a formal model in which it may derive deterministic results
from biochemical interactions. This is difficult, for many reasons
that I am not qualified to explain. One idea is to make a chemical
notation that is Turing-complete, thus giving us all the power of
lambda calculus for interfacing with chemistry and biology.

** Papers on the subject
*** On the Computational Power of Biochemistry

    [[http://lucacardelli.name/Papers/On%20the%20Computational%20Power%20of%20Biochemistry.pdf][Source PDF.]] By Luca Cardelli of Microsoft Research.

**** Chemical Ground Form (CGF)

     From the paper, we have a formal definition of CGF:
     
     - Chemical Ground Form (CFG) :: Consider the following
          denumerable sets: /Species/ ranged over by variables X, Y,
          ..., /Channels/ ranged over by a, b, ..., Moreover, let r,
          s, ... be rates (i.e. positive real numbers). The syntax of
          CGF is as follows (where single \(\vert\) separates syntactic
          alternatives while the double \(\vert\vert\) denotes parallel
          composition):
          
          | [[file:../bdnf.org][BDNF Form]]                                      | Meaning                         |
          |------------------------------------------------+---------------------------------|
          | \(E ::= 0 \vert X=M,E \)                       | Reagents                        |
          | \(M ::= 0 \vert \pi; Po+M \)                   | Molecule                        |
          | \(P ::= 0 \vert X \vert\vert P\)               | Solution                        |
          | \(\pi ::= \tau_(r) \vert ?a_(r) \vert !a_(r)\) | Internal, Input, Output actions |
          | \(CGF ::= (E,P)\)                              | Reagents and initial Solution   |

          Given a CGF(E,P), we assume that for every variable X
          occurring in P or E, there is exactly one definition X = M
          in E.

     Now, what this means in practical terms is not clear to me. 
          
    
   
